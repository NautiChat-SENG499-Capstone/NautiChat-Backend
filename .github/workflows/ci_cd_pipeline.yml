name: CI/CD Pipeline

on:
    push:
        branches: [main]
    pull_request:

permissions:
    contents: read
    id-token: write

env:
    IMAGE_NAME: milesssssss/nautichat-backend

jobs:
    lint:
        name: Lint (pre-commit)
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.12"
                  cache: "pip"

            - name: Install dependencies
              run: |
                  pip install --upgrade pip
                  pip install pre-commit
                  pre-commit install

            - name: Run pre-commit on all files
              run: pre-commit run --all-files
    test:
        runs-on: ubuntu-latest

        env:
            SUPABASE_DB_URL: "${{ secrets.SUPABASE_DB_URL }}"
            SECRET_KEY: ci_dummy_key
            ALGORITHM: HS256
            ACCESS_TOKEN_EXPIRE_HOURS: "24"
            REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
            GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
            ONC_TOKEN: ${{ secrets.ONC_TOKEN }}

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-python@v5
              with:
                  python-version: "3.12"
                  cache: "pip"

            - name: Install deps
              run: |
                  python -m pip install --upgrade pip
                  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
                  pip install pytest
                  pip install pytest-asyncio

            - name: Run pytest
              run: python -m pytest -q
    build-pr: # (just checks Docker build locally)
        if: github.event_name == 'pull_request'
        runs-on: ubuntu-latest
        needs: [test, lint]
        steps:
            - uses: actions/checkout@v4
            - uses: docker/setup-buildx-action@v3
            - uses: docker/build-push-action@v5
              with:
                  context: .
                  platforms: linux/amd64
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
                  tags: |
                      ${{ env.IMAGE_NAME }}:latest
                      ${{ env.IMAGE_NAME }}:${{ github.sha }}

    # Build + Push
    build:
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      runs-on: ubuntu-latest
      needs: test
    
      steps:
        - uses: actions/checkout@v4
    
        - uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
        - uses: docker/setup-buildx-action@v3
    
        - uses: docker/build-push-action@v5
          with:
            context: .
            platforms: linux/amd64
            push: true
            cache-from: type=gha
            cache-to: type=gha,mode=max
            tags: |
              ${{ env.IMAGE_NAME }}:latest
              ${{ env.IMAGE_NAME }}:${{ github.sha }}
